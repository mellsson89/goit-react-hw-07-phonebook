{"version":3,"sources":["components/ContactForm/styles/contactForm.module.scss","components/Filter/styles/filter.module.scss","components/Modal/styles/modal.module.scss","components/ContactList/styles/contactList.module.scss","redux/actions.js","redux/contacts-selectors.js","components/Filter/Filter.js","redux/contacts-operations.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Modal/Modal.js","App.js","redux/contactsReducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","handleFilter","allContacts","state","contacts","items","filterContacts","filter","getVisibleContacts","createSelector","normalizeFilter","toLowerCase","contact","name","includes","Filter","value","useSelector","dispatch","useDispatch","className","style","filterLabel","type","onChange","e","currentTarget","filterInput","axios","defaults","baseURL","ContactForm","onSave","useState","setName","number","setNumber","onSubmit","post","then","data","catch","error","addContact","handleChange","resetForm","preventDefault","cloneName","find","alert","form","formLabel","pattern","title","required","formInput","ContactList","onDelete","id","delete","deleteContact","map","contactList_item","onClick","modalRoot","document","querySelector","Modal","children","onClose","closeModalEscape","useCallback","code","useEffect","window","addEventListener","removeEventListener","createPortal","Modal__backdrop","target","Modal__content","App","showModal","setShowModal","get","toggleModal","loading","loadingContacts","errorMessenger","color","height","width","timeout","itemsReducer","createReducer","payload","filterReducer","_","contactsReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1a65d656.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contactForm_form__Xf3UP\",\"formInput\":\"contactForm_formInput__1NWn0\",\"formLabel\":\"contactForm_formLabel__2YvUF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"filter_filterInput__C1Cdi\",\"filterLabel\":\"filter_filterLabel__7T-pT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal__backdrop\":\"modal_Modal__backdrop__1jJ6y\",\"Modal__content\":\"modal_Modal__content__fz9pQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList_item\":\"contactList_contactList_item__2clu3\"};","import {createAction} from \"@reduxjs/toolkit\";\n\nexport const fetchContactsRequest=createAction('contacts/fetchContactsRequest');\nexport const fetchContactsSuccess=createAction('contacts/fetchContactsSuccess');\nexport const fetchContactsError=createAction('contacts/fetchContactsError');\n\nexport const addContactRequest=createAction('contacts/addContactRequest');\nexport const addContactSuccess=createAction('contacts/addContactSuccess')\nexport const addContactError=createAction('contacts/addContactError');\n\nexport const deleteContactRequest=createAction('contacts/deleteContactRequest');\nexport const deleteContactSuccess=createAction('contacts/deleteContactSuccess');\nexport const deleteContactError=createAction('contacts/deleteContactError');\n\n\n\nexport const handleFilter=createAction('contact/filter');\n\n\n","import {createSelector} from \"@reduxjs/toolkit\";\n\nexport const allContacts=state => state.contacts.items;\n\nexport const filterContacts=state => state.contacts.filter;\n\nexport const loadingContacts =state => state.contacts.loading;\nexport const errorMessenger =state => state.contacts.error;\n\nexport const getVisibleContacts=createSelector([allContacts,filterContacts],(contacts,filter) =>{\n    const normalizeFilter=filter.toLowerCase();\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizeFilter))\n} )","import React from \"react\";\nimport style from './styles/filter.module.scss';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {handleFilter} from '../../redux/actions';\nimport {filterContacts} from '../../redux/contacts-selectors';\nimport PropTypes from 'prop-types'\n\n\n\nexport default function Filter()  {\n\n    const value=useSelector(state => filterContacts(state));\n    const dispatch=useDispatch();\n    const onChange=(e) => dispatch(handleFilter(e.currentTarget.value));\n\n    return (\n\n        <label className={style.filterLabel}>\n            Find contacts by name\n            <input type='text' name='filter' value={value} onChange={onChange} className={style.filterInput}/>\n        </label>\n    )\n}\n\nFilter.propTypes ={\n    value:PropTypes.string\n}","import axios from \"axios\";\nimport {addContactRequest,addContactSuccess,addContactError,deleteContactRequest,deleteContactSuccess,\n    deleteContactError,fetchContactsRequest,fetchContactsSuccess,fetchContactsError} from './actions'\n\n\n\naxios.defaults.baseURL='http://localhost:4040';\n\nexport const fetchContact=()=>  dispatch => {\n    dispatch(fetchContactsRequest());\n    axios.get('/contacts').then(({data}) => dispatch(fetchContactsSuccess(data)))\n        .catch(error => dispatch(fetchContactsError(error)))\n}\n\nexport const addContact=(value)=> dispatch => {\n    dispatch(addContactRequest());\n    axios.post('/contacts',value).then(({data}) =>dispatch(addContactSuccess(data)))\n        .catch(error => dispatch(addContactError(error)))\n}\n\nexport const deleteContact= id => dispatch => {\n    dispatch(deleteContactRequest());\n    axios.delete(`/contacts/${id}`).then(()=> dispatch(deleteContactSuccess(id)))\n        .catch(error => dispatch(deleteContactError(error)))\n}\n\n\n","import React, {useState} from \"react\";\nimport style from './styles/contactForm.module.scss';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addContact} from '../../redux/contacts-operations';\nimport {allContacts} from '../../redux/contacts-selectors';\n\n\nexport default function ContactForm({onSave}){\n\n    const [name,setName]=useState('');\n    const [number,setNumber]=useState('');\n\n    const contacts=useSelector(state => allContacts(state));\n\n    const dispatch=useDispatch();\n    const onSubmit=(value) => dispatch(addContact(value));\n\n    const handleChange = (e) => {\n        const {name,value}=e.currentTarget;\n\n        switch (name) {\n            case 'name':\n                setName(value);\n                return;\n            case 'number':\n                setNumber(value);\n                return;\n            default: return;\n        }\n    }\n\n   const handleSubmit =(e) => {\n        e.preventDefault();\n\n        const contact = {\n            name,\n            number\n        }\n\n       const cloneName= contacts.find(({name}) => contact.name.toLowerCase() === name.toLowerCase())\n\n        if(cloneName) {\n            const {name}=cloneName;\n            alert(`${name} is already in contacts`);\n            return;\n        }\n\n        onSubmit(contact);\n        onSave();\n        resetForm()\n\n    }\n\n    const resetForm =() => {\n        setName('');\n        setNumber('');\n    }\n\n\n    return (\n        <form onSubmit={handleSubmit} className={style.form}>\n            <label className={style.formLabel}>\n                Name\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    onChange={handleChange}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n                    className={style.formInput}\n                />\n            </label>\n            <label className={style.formLabel}>\n                Number\n                <input\n                    type=\"tel\"\n                    name=\"number\"\n                    value={number}\n                    onChange={handleChange}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                    required\n                    className={style.formInput}\n                />\n            </label>\n            <button type='submit'>Add contact</button>\n        </form>\n\n    )\n}\n","import React from \"react\";\nimport style from './styles/contactList.module.scss'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {deleteContact} from '../../redux/contacts-operations';\nimport {getVisibleContacts} from '../../redux/contacts-selectors';\nimport PropTypes from 'prop-types';\n\nexport default function ContactList ()  {\n    const contacts=useSelector(state => getVisibleContacts(state));\n    const dispatch=useDispatch();\n    const onDelete= (id) => dispatch(deleteContact(id));\n    return (\n        <ul>\n            {contacts.map(({id,name,number})=> (\n\n                <li key={id} className={style.contactList_item}>{name}: {number} <button onClick={() => onDelete(id)}>Delete</button></li>\n\n            ))}\n        </ul>\n    )\n}\n\nContactList.propTypes = {\n    contacts:PropTypes.arrayOf(PropTypes.shape({\n        id:PropTypes.string.isRequired,\n        name:PropTypes.string.isRequired,\n        number:PropTypes.string.isRequired\n    }))\n}","import React, { useCallback, useEffect} from \"react\";\nimport {createPortal} from 'react-dom';\nimport style from './styles/modal.module.scss';\n\nconst modalRoot=document.querySelector('#modal-root')\n\nexport default function Modal({children,onClose}){\n\n    const closeModalEscape =useCallback((e) => {\n        if (e.code === \"Escape\") {\n            onClose();\n        }\n    },[onClose])\n\n\n    useEffect(()=> {\n        window.addEventListener('keydown', closeModalEscape);\n        return () =>{\n            window.removeEventListener('keydown', closeModalEscape)\n        }\n    },[closeModalEscape]);\n\n\n    const closeClickModal=(e) => {\n        if(e.target === e.currentTarget) {\n            onClose();\n        }\n    }\n\n    return createPortal(<div className={style.Modal__backdrop} onClick={closeClickModal}>\n        <div className={style.Modal__content}>{children}</div>\n    </div>,modalRoot)\n}\n","import React, {useEffect, useState} from \"react\";\nimport Filter from \"./components/Filter\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport {fetchContact} from './redux/contacts-operations'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport Modal from \"./components/Modal\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {loadingContacts,errorMessenger} from './redux/contacts-selectors';\n\nexport default function App(){\n\n    const [showModal,setShowModal]=useState(false);\n\n    const dispatch=useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchContact())\n    },[dispatch])\n\n    const toggleModal =() => {\n        setShowModal(!showModal);\n    }\n\n    const loading=useSelector(state => loadingContacts(state));\n    const error=useSelector(state => errorMessenger(state));\n\n\n        return (\n            <div>\n                <button type='button' onClick={toggleModal}>Add contact</button>\n                <h1>Phonebook</h1>\n                <h2>Contacts</h2>\n                <Filter/>\n                <ContactList/>\n                {showModal && <Modal onClose={toggleModal}><ContactForm onSave={toggleModal}/></Modal>}\n                {error && <p color=\"red\">Error!!!!</p>}\n                {loading &&  <Loader type=\"Watch\" color=\"#00BFFF\" height={60} width={60} timeout={3000}  />}\n            </div>\n        )\n    }\n\n\n","import {combineReducers} from \"redux\";\nimport {createReducer} from \"@reduxjs/toolkit\";\nimport {addContactRequest,addContactSuccess,addContactError,deleteContactRequest,deleteContactSuccess,\n    deleteContactError,fetchContactsRequest,fetchContactsSuccess,fetchContactsError,handleFilter} from './actions'\n\nconst itemsReducer =createReducer([],{\n[fetchContactsSuccess]:(state,{payload}) => payload,\n[addContactSuccess]:(state,{payload}) => [...state,payload],\n[deleteContactSuccess]:(state,{payload}) => state.filter(contact => contact.id !== payload)\n})\n\nconst filterReducer=createReducer('',{\n[handleFilter]:(_,{payload})=> payload\n})\n\nconst loading =createReducer(false,{\n    [addContactRequest]: ()=> true,\n    [addContactSuccess]: ()=> false,\n    [addContactError]: ()=> false,\n    [deleteContactRequest]:()=> true,\n    [deleteContactSuccess]:()=> false,\n    [deleteContactError]:()=> false,\n    [fetchContactsRequest]: ()=> true,\n    [fetchContactsSuccess]: ()=> false,\n    [fetchContactsError]: ()=> false,\n\n})\nconst errorMessenger =createReducer(false,{\n    [addContactRequest]: ()=> false,\n    [addContactSuccess]: ()=> false,\n    [addContactError]: ()=> true,\n    [deleteContactRequest]:()=> false,\n    [deleteContactSuccess]:()=> false,\n    [deleteContactError]:()=> true,\n    [fetchContactsRequest]: ()=> false,\n    [fetchContactsSuccess]: ()=> false,\n    [fetchContactsError]: ()=> true,\n\n})\n\nexport const contactsReducer=combineReducers({\n    items:itemsReducer,\n    filter:filterReducer,\n    loading,\n    errorMessenger\n})\n","import {contactsReducer} from './contactsReducer'\nimport {configureStore,getDefaultMiddleware} from \"@reduxjs/toolkit\";\nimport logger from 'redux-logger';\nimport {\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER\n} from 'redux-persist';\n\n\n\nconst middleware=[...getDefaultMiddleware({\n    serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n}),logger];\n\n\n\n\nexport const store=configureStore({\n    reducer:{\n        contacts:contactsReducer\n    },\n    middleware\n})\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {store} from \"./redux/store\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}